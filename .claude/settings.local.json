{
  "permissions": {
    "allow": [
      "Bash(netstat:*)",
      "Bash(npm run dev:*)",
      "Bash(gh issue view:*)",
      "Read(C:\\c\\Users\\masas\\Documents\\Projects\\my-board-app/**)",
      "Bash(\"C:\\Users\\masas\\Documents\\Projects\\my-board-app\")",
      "Bash(\"/c/Program Files/GitHub CLI/gh\" issue view 32)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh\" project item-list 2 --owner kirikab-27 --limit 30)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh\" issue view 32 --json title,state,assignees,labels,createdAt,updatedAt,body)",
      "Bash(gh issue comment:*)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh\" issue comment 32 --body \"## Hydrationエラー修正完了（2025/08/30）\n\n### 修正した問題\n人気投稿タブでHTML構造違反によるHydrationエラーが発生していた問題を修正しました。\n\n### 修正内容\nsrc/app/analytics/dashboard/page.tsx の Material-UI Chip を Typography代替実装に変更\n- HTML構造安全化：p内divネスト問題完全解決\n- Hydrationエラー解消：React DOMエラー解消\n- 視覚的統一維持：Chip風デザイン完全再現\n\n### 動作確認結果\n- コンパイル成功\n- API正常動作\n- 人気投稿タブでのエラー完全解消\n- 視覚的デザイン維持\n\n修正完了：分析ダッシュボードは完全にエラーなく動作。残り実装項目への影響なし。\")",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh\" issue view 32)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" issue view 32 --repo kirikab-27/my-board-app)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" project item-list 2 --owner kirikab-27 --limit 30)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" project item-add 2 --owner kirikab-27 --url https://github.com/kirikab-27/my-board-app/issues/32)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" project item-list 2 --owner kirikab-27 --limit 35)",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" api graphql -f query='\n{\n  node(id: \"\"PVT_kwHOB5DmjM4BAsKG\"\") {\n    ... on ProjectV2 {\n      id\n      title\n      fields(first: 20) {\n        nodes {\n          ... on ProjectV2Field {\n            id\n            name\n            dataType\n          }\n          ... on ProjectV2SingleSelectField {\n            id\n            name\n            dataType\n            options {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n}')",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" api graphql -f query='\n{\n  user(login: \"\"kirikab-27\"\") {\n    projectV2(number: 2) {\n      id\n      title\n      fields(first: 20) {\n        nodes {\n          ... on ProjectV2Field {\n            id\n            name\n            dataType\n          }\n          ... on ProjectV2SingleSelectField {\n            id\n            name\n            dataType\n            options {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n}')",
      "Bash(\"C:\\Program Files\\GitHub CLI\\gh.exe\" api graphql -f query='\nmutation {\n  updateProjectV2ItemFieldValue(\n    input: {\n      projectId: \"\"PVT_kwHOB5DmjM4BAytu\"\"\n      itemId: \"\"PVTI_lAHOB5DmjM4BAytuzgeFRww\"\"\n      fieldId: \"\"PVTSSF_lAHOB5DmjM4BAytuzgzfW84\"\"\n      value: {\n        singleSelectOptionId: \"\"2b158c9c\"\"\n      }\n    }\n  ) {\n    projectV2Item {\n      id\n    }\n  }\n}')",
      "Bash(npm run build:*)",
      "Bash(git checkout:*)",
      "Bash(git add:*)",
      "Bash(git stash push:*)",
      "Bash(git commit:*)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "C:\\c\\Users\\masas\\Documents\\Projects\\my-board-app"
    ]
  }
}